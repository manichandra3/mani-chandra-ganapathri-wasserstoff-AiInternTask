{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const uploadDocument = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Error uploading document');\n  }\n};\nexport const searchDocuments = async query => {\n  try {\n    const response = await api.get('/search', {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Error searching documents');\n  }\n};\nexport const askQuestion = async question => {\n  try {\n    const response = await api.get('/ask', {\n      params: {\n        question\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Error getting answer');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","uploadDocument","file","formData","FormData","append","response","post","data","error","_error$response","_error$response$data","Error","detail","searchDocuments","query","get","params","_error$response2","_error$response2$data","askQuestion","question","_error$response3","_error$response3$data"],"sources":["/Users/manichandraganapathri/Desktop/dev/mani-chandra-ganapathri-wasserstoff-AiInternTask-master/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const uploadDocument = async (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  try {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Error uploading document');\n  }\n};\n\nexport const searchDocuments = async (query) => {\n  try {\n    const response = await api.get('/search', {\n      params: { query },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Error searching documents');\n  }\n};\n\nexport const askQuestion = async (question) => {\n  try {\n    const response = await api.get('/ask', {\n      params: { question },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Error getting answer');\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8BAA8B;AAEnD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,SAAS,EAAEJ,QAAQ,EAAE;MACnDH,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,MAAM,KAAI,0BAA0B,CAAC;EAC7E;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC9C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMT,GAAG,CAACmB,GAAG,CAAC,SAAS,EAAE;MACxCC,MAAM,EAAE;QAAEF;MAAM;IAClB,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIP,KAAK,CAAC,EAAAM,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBN,MAAM,KAAI,2BAA2B,CAAC;EAC9E;AACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMT,GAAG,CAACmB,GAAG,CAAC,MAAM,EAAE;MACrCC,MAAM,EAAE;QAAEI;MAAS;IACrB,CAAC,CAAC;IACF,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIX,KAAK,CAAC,EAAAU,gBAAA,GAAAb,KAAK,CAACH,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBd,IAAI,cAAAe,qBAAA,uBAApBA,qBAAA,CAAsBV,MAAM,KAAI,sBAAsB,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}